plugins {
    id 'application'
    id 'groovy'
    id 'org.grails.grails-gsp'
    id 'org.grails.grails-web'
}

group = 'functional.tests'

dependencies {

    implementation project(':examples-functional-tests-plugin')
    implementation project(':views-json')
    implementation project(':views-markup')

    implementation 'org.grails:grails-core'
    implementation 'org.grails:grails-logging'
    implementation 'org.grails:grails-web-boot'

    implementation 'org.grails:grails-plugin-databinding'
    implementation 'org.grails:grails-plugin-i18n'
    implementation 'org.grails:grails-plugin-interceptors'
    implementation 'org.grails:grails-plugin-rest'
    implementation 'org.grails:grails-plugin-services'
    implementation 'org.grails:grails-plugin-url-mappings'
    implementation 'org.grails:grails-plugin-validation'

    implementation 'org.grails.plugins:gsp'
    implementation 'org.grails.plugins:hibernate5'
    implementation libs.grails.datastore.gorm.mongodb // Only used for access to grails.mongodb.geo.Point class

    implementation 'org.springframework.boot:spring-boot-autoconfigure'
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'

    compileOnly libs.jakarta.servlet.api // Provided by Tomcat

    runtimeOnly project(':views-json-templates')
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.apache.tomcat:tomcat-jdbc'
    runtimeOnly libs.assetpipeline

    testImplementation project(':views-json-testing-support')
    testImplementation libs.grails.testing.support.core

    integrationTestImplementation libs.jackson.databind
    integrationTestImplementation libs.micronaut.http.client
    integrationTestImplementation libs.micronaut.jackson.databind
}

java {
    sourceCompatibility = JavaVersion.toVersion(libs.versions.java.baseline.get())
}
